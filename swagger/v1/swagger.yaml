---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/developers":
    get:
      summary: list developers
      responses:
        '200':
          description: successful
    post:
      summary: create developer
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                icon:
                  type: string
                location:
                  type: string
                experience:
                  type: integer
                bio:
                  type: string
                hourly_rate:
                  type: integer
                tech_stack:
                  type: string
                github:
                  type: string
                twitter:
                  type: string
                linkedin:
                  type: string
                available:
                  type: boolean
                title:
                  type: string
                phone:
                  type: integer
                user_id:
                  type: string
              required:
              - name
              - icon
              - location
              - experience
              - bio
              - hourly_rate
              - tech_stack
              - github
              - twitter
              - linkedin
              - available
              - title
              - phone
              - user_id
  "/api/v1/developers/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show developer
      responses:
        '200':
          description: successful
    patch:
      summary: update developer
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                icon:
                  type: string
                location:
                  type: string
                experience:
                  type: integer
                bio:
                  type: string
                hourly_rate:
                  type: integer
                tech_stack:
                  type: string
                github:
                  type: string
                twitter:
                  type: string
                linkedin:
                  type: string
                available:
                  type: boolean
                title:
                  type: string
                phone:
                  type: integer
                user_id:
                  type: string
              required:
              - name
              - icon
              - location
              - experience
              - bio
              - hourly_rate
              - tech_stack
              - github
              - twitter
              - linkedin
              - available
              - title
              - phone
              - user_id
    put:
      summary: update developer
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                icon:
                  type: string
                location:
                  type: string
                experience:
                  type: integer
                bio:
                  type: text
                hourly_rate:
                  type: integer
                tech_stack:
                  type: string
                github:
                  type: string
                twitter:
                  type: string
                linkedin:
                  type: string
                available:
                  type: boolean
                title:
                  type: string
                phone:
                  type: integer
                user_id:
                  type: string
              required:
              - name
              - icon
              - location
              - experience
              - bio
              - hourly_rate
              - tech_stack
              - github
              - twitter
              - linkedin
              - available
              - title
              - phone
              - user_id
    delete:
      summary: delete developer
      responses:
        '200':
          description: successful
  "/api/v1/reservations":
    get:
      summary: list reservations
      responses:
        '200':
          description: successful
    post:
      summary: create reservation
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                start_date:
                  type: string
                end_date:
                  type: string
                location:
                  type: string
                developer_id:
                  type: integer
                user_id:
                  type: integer
              required:
              - start_date
              - end_date
              - location
              - developer_id
              - user_id
  "/api/v1/reservations/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show reservation
      responses:
        '200':
          description: successful
    patch:
      summary: update reservation
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                start_date:
                  type: string
                end_date:
                  type: string
                location:
                  type: string
                developer_id:
                  type: integer
                user_id:
                  type: integer
              required:
              - start_date
              - end_date
              - location
              - developer_id
              - user_id
    put:
      summary: update reservation
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                start_date:
                  type: string
                end_date:
                  type: string
                location:
                  type: string
                developer_id:
                  type: integer
                user_id:
                  type: integer
              required:
              - start_date
              - end_date
              - location
              - developer_id
              - user_id
    delete:
      summary: delete reservation
      responses:
        '200':
          description: successful
  "/api/v1/users":
    get:
      summary: list users
      responses:
        '200':
          description: successful
    post:
      summary: create user
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                name:
                  type: string
                username:
                  type: string
              required:
              - email
              - password
              - name
              - username
  "/api/v1/users/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show user
      responses:
        '200':
          description: successful
    patch:
      summary: update user
      responses:
        '200':
          description: successful
    put:
      summary: update user
      responses:
        '200':
          description: successful
    delete:
      summary: delete user
      responses:
        '200':
          description: successful
  "/api/v1/login":
    post:
      summary: login user
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: book-a-dev-api.herokuapp.com/
